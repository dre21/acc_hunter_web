/*Copyright (c) 2019-2020 deltadatamandiri.com All Rights Reserved.
 This software is the confidential and proprietary information of deltadatamandiri.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with deltadatamandiri.com*/
package com.acc_hunter_web.acc_hunter.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.OutputStream;
import java.math.BigInteger;
import java.sql.Date;

import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.export.ExportOptions;

import com.acc_hunter_web.acc_hunter.models.query.*;

public interface Acc_hunterQueryExecutorService {

    Page<GetTotalSkRequestedAdminResponse> executeGetTotalSkRequestedAdmin(String role, String branchId, Pageable pageable);

    void exportGetTotalSkRequestedAdmin(String role, String branchId, ExportOptions exportOptions, Pageable pageable, OutputStream outputStream);

    Integer executeInsertNewEfficiencySK(InsertNewEfficiencySkRequest insertNewEfficiencySkRequest);

    Page<GetParticipantLelangDetailResponse> executeGetParticipantLelangDetail(Integer idLelang, Pageable pageable);

    void exportGetParticipantLelangDetail(Integer idLelang, ExportOptions exportOptions, Pageable pageable, OutputStream outputStream);

    Integer executeDeleteGamificationPeojfUrutanSk(Integer id);

    Integer executeDeleteGamificationPeojfBadgesBonus(Integer id);

    Integer executeDeleteGamificationPeojfJenisSk(Integer id);

    Page<GetNoAggrListLelangResponse> executeGetNoAggrListLelang(String search, String role, String branchId, Pageable pageable);

    void exportGetNoAggrListLelang(String search, String role, String branchId, ExportOptions exportOptions, Pageable pageable, OutputStream outputStream);

    Page<GetDetailLaporanByAgreementNoResponse> executeGetDetailLaporanByAgreementNo(String agreementNo, Pageable pageable);

    void exportGetDetailLaporanByAgreementNo(String agreementNo, ExportOptions exportOptions, Pageable pageable, OutputStream outputStream);

    Page<GetReqSkdetailResponse> executeGetReqSKDetail(String noAggr, Pageable pageable);

    void exportGetReqSKDetail(String noAggr, ExportOptions exportOptions, Pageable pageable, OutputStream outputStream);

    Page<CheckEmailAvailableResponse> executeCheckEmailAvailable(String email, Pageable pageable);

    void exportCheckEmailAvailable(String email, ExportOptions exportOptions, Pageable pageable, OutputStream outputStream);

    Page<GetReportsListResponse> executeGetReportsList(String role, String branchId, String search, Pageable pageable);

    void exportGetReportsList(String role, String branchId, String search, ExportOptions exportOptions, Pageable pageable, OutputStream outputStream);

    Page<GetCountDashboardSkResponse> executeGetCountDashboardSK(Integer year, String role, String branchId, Pageable pageable);

    void exportGetCountDashboardSK(Integer year, String role, String branchId, ExportOptions exportOptions, Pageable pageable, OutputStream outputStream);

    Integer executeDeleteGamificationPeojfSaldoAr(Integer id);

    Integer executeUpdateFlagShowUsers(UpdateFlagShowUsersRequest updateFlagShowUsersRequest);

    Page<GetMitraLeaderboardsResponse> executeGetMitraLeaderboards(Date startDate, Date endDate, String city, String badgeType, Pageable pageable);

    void exportGetMitraLeaderboards(Date startDate, Date endDate, String city, String badgeType, ExportOptions exportOptions, Pageable pageable, OutputStream outputStream);

    Integer executeDeleteGamificationPeojfBtToSaldo(Integer id);

    Integer executeDeleteGamificationPeojfEfficiencySk(Integer id);

    Page<GetReportListByNoAggrResponse> executeGetReportListByNoAggr(String noAggr, Pageable pageable);

    void exportGetReportListByNoAggr(String noAggr, ExportOptions exportOptions, Pageable pageable, OutputStream outputStream);

    Integer executeSetPemenangLelang(SetPemenangLelangRequest setPemenangLelangRequest);

    Integer executeDeleteRewardConfig(Integer id);

    Page<GetActiveUsersAdminResponse> executeGetActiveUsersAdmin(String role, String branchId, Pageable pageable);

    void exportGetActiveUsersAdmin(String role, String branchId, ExportOptions exportOptions, Pageable pageable, OutputStream outputStream);

    Integer executeDeleteMasterReward(Integer id);

    Page<GetLelangTidakAktifResponse> executeGetLelangTidakAktif(String role, String branchId, String search, Pageable pageable);

    void exportGetLelangTidakAktif(String role, String branchId, String search, ExportOptions exportOptions, Pageable pageable, OutputStream outputStream);

    Integer executeDeleteGamificationPeojfPaketKredit(Integer id);

    Integer executeUpdatePasswordQuery(UpdatePasswordQueryRequest updatePasswordQueryRequest);

    Page<DashboardSuratKuasaResponse> executeDashboardSuratKuasa(Integer year, String role, String branchId, Pageable pageable);

    void exportDashboardSuratKuasa(Integer year, String role, String branchId, ExportOptions exportOptions, Pageable pageable, OutputStream outputStream);

    Page<GetAllListPesertaLelangResponse> executeGetAllListPesertaLelang(Integer idLelang, String badge, String area, Pageable pageable);

    void exportGetAllListPesertaLelang(Integer idLelang, String badge, String area, ExportOptions exportOptions, Pageable pageable, OutputStream outputStream);

    Integer executeInsertNewSaldoAR(InsertNewSaldoArRequest insertNewSaldoArRequest);

    Page<GetAllUsersMitraResponse> executeGetAllUsersMitra(Pageable pageable);

    void exportGetAllUsersMitra(ExportOptions exportOptions, Pageable pageable, OutputStream outputStream);

    Page<GetParticipantLelangByLelangIdResponse> executeGetParticipantLelangByLelangID(Integer detailId, String search, Pageable pageable);

    void exportGetParticipantLelangByLelangID(Integer detailId, String search, ExportOptions exportOptions, Pageable pageable, OutputStream outputStream);

    Page<GetRecentPointUserResponse> executeGetRecentPointUser(String email, Pageable pageable);

    void exportGetRecentPointUser(String email, ExportOptions exportOptions, Pageable pageable, OutputStream outputStream);

    Page<GetPeojfredeemRequestListResponse> executeGetPEOJFRedeemRequestList(String keyword, String role, String branchId, Pageable pageable);

    void exportGetPEOJFRedeemRequestList(String keyword, String role, String branchId, ExportOptions exportOptions, Pageable pageable, OutputStream outputStream);

    Integer executeInsertNewEfficiencySKNoValue2(InsertNewEfficiencySknoValue2Request insertNewEfficiencySknoValue2request);

    Page<GetInfRedeemHistoryListResponse> executeGetInfRedeemHistoryList(String keyword, String role, String branchId, Pageable pageable);

    void exportGetInfRedeemHistoryList(String keyword, String role, String branchId, ExportOptions exportOptions, Pageable pageable, OutputStream outputStream);

    Integer executeUpdateRoleUsers(UpdateRoleUsersRequest updateRoleUsersRequest);

    Page<ViewLelangSkaktifResponse> executeViewLelangSKAktif(String agreementNo, Pageable pageable);

    void exportViewLelangSKAktif(String agreementNo, ExportOptions exportOptions, Pageable pageable, OutputStream outputStream);

    Page<GetPesertaLelangDataResponse> executeGetPesertaLelangData(Integer lelangSkDetailId, Pageable pageable);

    void exportGetPesertaLelangData(Integer lelangSkDetailId, ExportOptions exportOptions, Pageable pageable, OutputStream outputStream);

    Integer executeUpdateFlagSayembara(UpdateFlagSayembaraRequest updateFlagSayembaraRequest);

    Page<GetPeojfredeemHistoryListResponse> executeGetPEOJFRedeemHistoryList(String keyword, String role, String branchId, Pageable pageable);

    void exportGetPEOJFRedeemHistoryList(String keyword, String role, String branchId, ExportOptions exportOptions, Pageable pageable, OutputStream outputStream);

    Page<GetSkrequestApprovedListResponse> executeGetSKRequestApprovedList(String search, String _select, String role, String branchId, Pageable pageable);

    void exportGetSKRequestApprovedList(String search, String _select, String role, String branchId, ExportOptions exportOptions, Pageable pageable, OutputStream outputStream);

    Page<GetLelangSkaktifResponse> executeGetLelangSKAktif(Pageable pageable);

    void exportGetLelangSKAktif(ExportOptions exportOptions, Pageable pageable, OutputStream outputStream);

    Page<GetSubmittedInfoDetailResponse> executeGetSubmittedInfoDetail(BigInteger id, Pageable pageable);

    void exportGetSubmittedInfoDetail(BigInteger id, ExportOptions exportOptions, Pageable pageable, OutputStream outputStream);

    Page<GetInfRedeemRequestListResponse> executeGetInfRedeemRequestList(String keyword, String role, String branchId, Pageable pageable);

    void exportGetInfRedeemRequestList(String keyword, String role, String branchId, ExportOptions exportOptions, Pageable pageable, OutputStream outputStream);

    Page<GetInformanLeaderboardsResponse> executeGetInformanLeaderboards(Date startDate, Date endDate, String city, String badgeType, Pageable pageable);

    void exportGetInformanLeaderboards(Date startDate, Date endDate, String city, String badgeType, ExportOptions exportOptions, Pageable pageable, OutputStream outputStream);

    Page<GetSkrequestPendingListResponse> executeGetSKRequestPendingList(String search, String role, String branchId, Pageable pageable);

    void exportGetSKRequestPendingList(String search, String role, String branchId, ExportOptions exportOptions, Pageable pageable, OutputStream outputStream);

    Page<GetLelangSkdetailByIdlelangListResponse> executeGetLelangSKDetailByIDLelangList(String role, String branchId, Integer lelangId, String search, Pageable pageable);

    void exportGetLelangSKDetailByIDLelangList(String role, String branchId, Integer lelangId, String search, ExportOptions exportOptions, Pageable pageable, OutputStream outputStream);

    Integer executeDeleteLelangParticipants(Integer detailLelang);

    Page<GetAllSknewResponse> executeGetAllSKNew(Pageable pageable);

    void exportGetAllSKNew(ExportOptions exportOptions, Pageable pageable, OutputStream outputStream);

    Page<GetAreaListResponse> executeGetAreaList(String role, String branchId, Pageable pageable);

    void exportGetAreaList(String role, String branchId, ExportOptions exportOptions, Pageable pageable, OutputStream outputStream);

    Page<GetSayembaraListResponse> executeGetSayembaraList(String role, String branchId, Pageable pageable);

    void exportGetSayembaraList(String role, String branchId, ExportOptions exportOptions, Pageable pageable, OutputStream outputStream);

    Page<GetLelangAktifResponse> executeGetLelangAktif(String role, String branchId, String search, String _select, Pageable pageable);

    void exportGetLelangAktif(String role, String branchId, String search, String _select, ExportOptions exportOptions, Pageable pageable, OutputStream outputStream);

    Page<GetJumlahSubmitInformationAdminResponse> executeGetJumlahSubmitInformationAdmin(String role, String branchId, Pageable pageable);

    void exportGetJumlahSubmitInformationAdmin(String role, String branchId, ExportOptions exportOptions, Pageable pageable, OutputStream outputStream);

    Page<GetPilihWinnerSklistResponse> executeGetPilihWinnerSKList(String role, String branchId, String search, Pageable pageable);

    void exportGetPilihWinnerSKList(String role, String branchId, String search, ExportOptions exportOptions, Pageable pageable, OutputStream outputStream);

    Integer executeUpdateFlagSKRequest(UpdateFlagSkrequestRequest updateFlagSkrequestRequest);

    Integer executeDeleteLelangImages(Integer id);

    Page<GetLelangSkdetailByRemoIdResponse> executeGetLelangSKDetailByRemoId(Integer remoId, Pageable pageable);

    void exportGetLelangSKDetailByRemoId(Integer remoId, ExportOptions exportOptions, Pageable pageable, OutputStream outputStream);

    Page<GetUserByEmailQueryResponse> executeGetUserByEmailQuery(String email, Pageable pageable);

    void exportGetUserByEmailQuery(String email, ExportOptions exportOptions, Pageable pageable, OutputStream outputStream);

    Integer executeInsertNewBTToSaldoNoValue2(InsertNewBttoSaldoNoValue2Request insertNewBttoSaldoNoValue2request);

    Page<GetCityByProvinceResponse> executeGetCItyByProvince(String provinceName, Pageable pageable);

    void exportGetCItyByProvince(String provinceName, ExportOptions exportOptions, Pageable pageable, OutputStream outputStream);

    Page<GetLelangListResponse> executeGetLelangList(String search, String role, String branchId, Pageable pageable);

    void exportGetLelangList(String search, String role, String branchId, ExportOptions exportOptions, Pageable pageable, OutputStream outputStream);

    Page<GetAllUsersRemoResponse> executeGetAllUsersRemo(Pageable pageable);

    void exportGetAllUsersRemo(ExportOptions exportOptions, Pageable pageable, OutputStream outputStream);

    Integer executeInsertNewSaldoARNoValue2(InsertNewSaldoArnoValue2Request insertNewSaldoArnoValue2request);

    Page<GetUserIdByEmailResponse> executeGetUserIdByEmail(String email, Pageable pageable);

    void exportGetUserIdByEmail(String email, ExportOptions exportOptions, Pageable pageable, OutputStream outputStream);

    Page<GetUserAuthResponse> executeGetUserAuth(String email, Pageable pageable);

    void exportGetUserAuth(String email, ExportOptions exportOptions, Pageable pageable, OutputStream outputStream);

    Page<GetAllUsersPoolResponse> executeGetAllUsersPool(Pageable pageable);

    void exportGetAllUsersPool(ExportOptions exportOptions, Pageable pageable, OutputStream outputStream);

    Page<GetDocumentLelangResponse> executeGetDocumentLelang(String search, Pageable pageable);

    void exportGetDocumentLelang(String search, ExportOptions exportOptions, Pageable pageable, OutputStream outputStream);

    Page<GetMapListAdminResponse> executeGetMapListAdmin(String role, String branchId, Pageable pageable);

    void exportGetMapListAdmin(String role, String branchId, ExportOptions exportOptions, Pageable pageable, OutputStream outputStream);

    Page<GetLelangSktidakAktifResponse> executeGetLelangSKTidakAktif(Pageable pageable);

    void exportGetLelangSKTidakAktif(ExportOptions exportOptions, Pageable pageable, OutputStream outputStream);

    Integer executeUpdateFlagRedeem(UpdateFlagRedeemRequest updateFlagRedeemRequest);

    Integer executeDeleteGamificationPeojfSeasonalPoint(Integer id);

    Page<GetSkrequestPerpanjangApprovedListResponse> executeGetSKRequestPerpanjangApprovedList(String search, String role, String branchId, Pageable pageable);

    void exportGetSKRequestPerpanjangApprovedList(String search, String role, String branchId, ExportOptions exportOptions, Pageable pageable, OutputStream outputStream);

    Page<GetSkrequestDetailResponse> executeGetSKRequestDetail(Integer skRequestId, Pageable pageable);

    void exportGetSKRequestDetail(Integer skRequestId, ExportOptions exportOptions, Pageable pageable, OutputStream outputStream);

    Page<GetAllUsersInformantResponse> executeGetAllUsersInformant(Pageable pageable);

    void exportGetAllUsersInformant(ExportOptions exportOptions, Pageable pageable, OutputStream outputStream);

    Page<GetReportImagesByIdResponse> executeGetReportImagesById(BigInteger id, Pageable pageable);

    void exportGetReportImagesById(BigInteger id, ExportOptions exportOptions, Pageable pageable, OutputStream outputStream);

    Page<GetSkrequestPerpanjangPendingListResponse> executeGetSKRequestPerpanjangPendingList(String search, String role, String branchId, Pageable pageable);

    void exportGetSKRequestPerpanjangPendingList(String search, String role, String branchId, ExportOptions exportOptions, Pageable pageable, OutputStream outputStream);

    Integer executeInsertNewBTToSaldo(InsertNewBttoSaldoRequest insertNewBttoSaldoRequest);

    Page<GetUserParticipantLelangResponse> executeGetUserParticipantLelang(Integer idLelang, Pageable pageable);

    void exportGetUserParticipantLelang(Integer idLelang, ExportOptions exportOptions, Pageable pageable, OutputStream outputStream);

}