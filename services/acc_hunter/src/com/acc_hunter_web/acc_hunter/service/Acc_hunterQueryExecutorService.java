/*Copyright (c) 2019-2020 deltadatamandiri.com All Rights Reserved.
 This software is the confidential and proprietary information of deltadatamandiri.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with deltadatamandiri.com*/
package com.acc_hunter_web.acc_hunter.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.OutputStream;
import java.math.BigInteger;

import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.export.ExportOptions;

import com.acc_hunter_web.acc_hunter.models.query.*;

public interface Acc_hunterQueryExecutorService {

    Page<GetAllUsersRemoResponse> executeGetAllUsersRemo(Pageable pageable);

    void exportGetAllUsersRemo(ExportOptions exportOptions, Pageable pageable, OutputStream outputStream);

    Page<GetLelangSkaktifResponse> executeGetLelangSKAktif(Pageable pageable);

    void exportGetLelangSKAktif(ExportOptions exportOptions, Pageable pageable, OutputStream outputStream);

    Page<GetSubmittedInfoDetailResponse> executeGetSubmittedInfoDetail(BigInteger id, Pageable pageable);

    void exportGetSubmittedInfoDetail(BigInteger id, ExportOptions exportOptions, Pageable pageable, OutputStream outputStream);

    Page<GetUserIdByEmailResponse> executeGetUserIdByEmail(String email, Pageable pageable);

    void exportGetUserIdByEmail(String email, ExportOptions exportOptions, Pageable pageable, OutputStream outputStream);

    Page<GetUserAuthResponse> executeGetUserAuth(String email, Pageable pageable);

    void exportGetUserAuth(String email, ExportOptions exportOptions, Pageable pageable, OutputStream outputStream);

    Integer executeUpdatePasswordQuery(UpdatePasswordQueryRequest updatePasswordQueryRequest);

    Page<GetAllUsersPoolResponse> executeGetAllUsersPool(Pageable pageable);

    void exportGetAllUsersPool(ExportOptions exportOptions, Pageable pageable, OutputStream outputStream);

    Page<GetLelangSktidakAktifResponse> executeGetLelangSKTidakAktif(Pageable pageable);

    void exportGetLelangSKTidakAktif(ExportOptions exportOptions, Pageable pageable, OutputStream outputStream);

    Page<GetAllSknewResponse> executeGetAllSKNew(Pageable pageable);

    void exportGetAllSKNew(ExportOptions exportOptions, Pageable pageable, OutputStream outputStream);

    Page<GetDetailLaporanByAgreementNoResponse> executeGetDetailLaporanByAgreementNo(String agreementNo, Pageable pageable);

    void exportGetDetailLaporanByAgreementNo(String agreementNo, ExportOptions exportOptions, Pageable pageable, OutputStream outputStream);

    Page<GetAllUsersMitraResponse> executeGetAllUsersMitra(Pageable pageable);

    void exportGetAllUsersMitra(ExportOptions exportOptions, Pageable pageable, OutputStream outputStream);

    Page<GetSkrequestDetailResponse> executeGetSKRequestDetail(Integer skRequestId, Pageable pageable);

    void exportGetSKRequestDetail(Integer skRequestId, ExportOptions exportOptions, Pageable pageable, OutputStream outputStream);

    Page<GetAllUsersInformantResponse> executeGetAllUsersInformant(Pageable pageable);

    void exportGetAllUsersInformant(ExportOptions exportOptions, Pageable pageable, OutputStream outputStream);

    Page<GetLelangSkdetailByRemoIdResponse> executeGetLelangSKDetailByRemoId(Integer remoId, Pageable pageable);

    void exportGetLelangSKDetailByRemoId(Integer remoId, ExportOptions exportOptions, Pageable pageable, OutputStream outputStream);

    Page<GetReportImagesByIdResponse> executeGetReportImagesById(BigInteger id, Pageable pageable);

    void exportGetReportImagesById(BigInteger id, ExportOptions exportOptions, Pageable pageable, OutputStream outputStream);

    Page<GetUserByEmailQueryResponse> executeGetUserByEmailQuery(String email, Pageable pageable);

    void exportGetUserByEmailQuery(String email, ExportOptions exportOptions, Pageable pageable, OutputStream outputStream);

    Page<ViewLelangSkaktifResponse> executeViewLelangSKAktif(String agreementNo, Pageable pageable);

    void exportViewLelangSKAktif(String agreementNo, ExportOptions exportOptions, Pageable pageable, OutputStream outputStream);

    Page<GetCityByProvinceResponse> executeGetCItyByProvince(String provinceName, Pageable pageable);

    void exportGetCItyByProvince(String provinceName, ExportOptions exportOptions, Pageable pageable, OutputStream outputStream);

    Page<GetPesertaLelangDataResponse> executeGetPesertaLelangData(Integer lelangSkDetailId, Pageable pageable);

    void exportGetPesertaLelangData(Integer lelangSkDetailId, ExportOptions exportOptions, Pageable pageable, OutputStream outputStream);

}