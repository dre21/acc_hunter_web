/*Copyright (c) 2019-2020 deltadatamandiri.com All Rights Reserved.
 This software is the confidential and proprietary information of deltadatamandiri.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with deltadatamandiri.com*/
package com.acc_hunter_web.acc_hunter;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.ForeignKey;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;

import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.FetchMode;

/**
 * Reports generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`reports`")
public class Reports implements Serializable {

    private Integer id;
    private String vehicleNoAggr;
    private String description;
    private BigDecimal latitude;
    private BigDecimal longitute;
    private boolean isDraft;
    private LocalDateTime createdAt;
    private String createdBy;
    private LocalDateTime updatedAt;
    private String updatedBy;
    private LocalDateTime deletedAt;
    private String deletedBy;
    private String imageHeader;
    private Vehicles vehicles;

    @Id
    @SequenceGenerator(name = "generator", sequenceName = "`reports_id_seq`" , allocationSize = 1)
    @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "generator")
    @Column(name = "`id`", nullable = false, scale = 0, precision = 10)
    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    @Column(name = "`vehicle_no_aggr`", nullable = false, length = 30)
    public String getVehicleNoAggr() {
        return this.vehicleNoAggr;
    }

    public void setVehicleNoAggr(String vehicleNoAggr) {
        this.vehicleNoAggr = vehicleNoAggr;
    }

    @Column(name = "`description`", nullable = false, length = 2147483647)
    public String getDescription() {
        return this.description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    @Column(name = "`latitude`", nullable = false, scale = 17, precision = 17)
    public BigDecimal getLatitude() {
        return this.latitude;
    }

    public void setLatitude(BigDecimal latitude) {
        this.latitude = latitude;
    }

    @Column(name = "`longitute`", nullable = false, scale = 17, precision = 17)
    public BigDecimal getLongitute() {
        return this.longitute;
    }

    public void setLongitute(BigDecimal longitute) {
        this.longitute = longitute;
    }

    @Column(name = "`is_draft`", nullable = false)
    public boolean isIsDraft() {
        return this.isDraft;
    }

    public void setIsDraft(boolean isDraft) {
        this.isDraft = isDraft;
    }

    @Column(name = "`created_at`", nullable = false)
    public LocalDateTime getCreatedAt() {
        return this.createdAt;
    }

    public void setCreatedAt(LocalDateTime createdAt) {
        this.createdAt = createdAt;
    }

    @Column(name = "`created_by`", nullable = false, length = 50)
    public String getCreatedBy() {
        return this.createdBy;
    }

    public void setCreatedBy(String createdBy) {
        this.createdBy = createdBy;
    }

    @Column(name = "`updated_at`", nullable = true)
    public LocalDateTime getUpdatedAt() {
        return this.updatedAt;
    }

    public void setUpdatedAt(LocalDateTime updatedAt) {
        this.updatedAt = updatedAt;
    }

    @Column(name = "`updated_by`", nullable = true, length = 50)
    public String getUpdatedBy() {
        return this.updatedBy;
    }

    public void setUpdatedBy(String updatedBy) {
        this.updatedBy = updatedBy;
    }

    @Column(name = "`deleted_at`", nullable = true)
    public LocalDateTime getDeletedAt() {
        return this.deletedAt;
    }

    public void setDeletedAt(LocalDateTime deletedAt) {
        this.deletedAt = deletedAt;
    }

    @Column(name = "`deleted_by`", nullable = true, length = 50)
    public String getDeletedBy() {
        return this.deletedBy;
    }

    public void setDeletedBy(String deletedBy) {
        this.deletedBy = deletedBy;
    }

    @Column(name = "`image_header`", nullable = false, length = 2147483647)
    public String getImageHeader() {
        return this.imageHeader;
    }

    public void setImageHeader(String imageHeader) {
        this.imageHeader = imageHeader;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`vehicle_no_aggr`", referencedColumnName = "`no_aggr`", insertable = false, updatable = false, foreignKey = @ForeignKey(name = "`report_vehicle_fkey`"))
    @Fetch(FetchMode.JOIN)
    public Vehicles getVehicles() {
        return this.vehicles;
    }

    public void setVehicles(Vehicles vehicles) {
        if(vehicles != null) {
            this.vehicleNoAggr = vehicles.getNoAggr();
        }

        this.vehicles = vehicles;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof Reports)) return false;
        final Reports reports = (Reports) o;
        return Objects.equals(getId(), reports.getId());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getId());
    }
}