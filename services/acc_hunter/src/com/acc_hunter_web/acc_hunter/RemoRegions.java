/*Copyright (c) 2019-2020 deltadatamandiri.com All Rights Reserved.
 This software is the confidential and proprietary information of deltadatamandiri.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with deltadatamandiri.com*/
package com.acc_hunter_web.acc_hunter;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * RemoRegions generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`remo_regions`", uniqueConstraints = {
            @UniqueConstraint(name = "`UK_remo_regions_region`", columnNames = {"`region`"})})
public class RemoRegions implements Serializable {

    private Integer id;
    private String region;

    @Id
    @SequenceGenerator(name = "generator", sequenceName = "`remo_regions_id_seq`" , allocationSize = 1)
    @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "generator")
    @Column(name = "`id`", nullable = false, scale = 0, precision = 10)
    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    @Column(name = "`region`", nullable = false, length = 255)
    public String getRegion() {
        return this.region;
    }

    public void setRegion(String region) {
        this.region = region;
    }


    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof RemoRegions)) return false;
        final RemoRegions remoRegions = (RemoRegions) o;
        return Objects.equals(getId(), remoRegions.getId());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getId());
    }
}