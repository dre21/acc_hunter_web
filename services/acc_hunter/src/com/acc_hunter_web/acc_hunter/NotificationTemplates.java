/*Copyright (c) 2019-2020 deltadatamandiri.com All Rights Reserved.
 This software is the confidential and proprietary information of deltadatamandiri.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with deltadatamandiri.com*/
package com.acc_hunter_web.acc_hunter;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.ForeignKey;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;

import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.FetchMode;

/**
 * NotificationTemplates generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`notification_templates`")
public class NotificationTemplates implements Serializable {

    private Integer id;
    private int catId;
    private String content;
    private NotificationCategories notificationCategories;

    @Id
    @SequenceGenerator(name = "generator", sequenceName = "`notification_templates_ID_seq`" , allocationSize = 1)
    @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "generator")
    @Column(name = "`ID`", nullable = false, scale = 0, precision = 10)
    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    @Column(name = "`cat_id`", nullable = false, scale = 0, precision = 10)
    public int getCatId() {
        return this.catId;
    }

    public void setCatId(int catId) {
        this.catId = catId;
    }

    @Column(name = "`content`", nullable = false, length = 255)
    public String getContent() {
        return this.content;
    }

    public void setContent(String content) {
        this.content = content;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`cat_id`", referencedColumnName = "`ID`", insertable = false, updatable = false, foreignKey = @ForeignKey(name = "`FK_notification_templatedW03Z`"))
    @Fetch(FetchMode.JOIN)
    public NotificationCategories getNotificationCategories() {
        return this.notificationCategories;
    }

    public void setNotificationCategories(NotificationCategories notificationCategories) {
        if(notificationCategories != null) {
            this.catId = notificationCategories.getId();
        }

        this.notificationCategories = notificationCategories;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof NotificationTemplates)) return false;
        final NotificationTemplates notificationTemplates = (NotificationTemplates) o;
        return Objects.equals(getId(), notificationTemplates.getId());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getId());
    }
}