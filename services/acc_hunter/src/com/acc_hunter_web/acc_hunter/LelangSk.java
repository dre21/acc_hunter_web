/*Copyright (c) 2019-2020 deltadatamandiri.com All Rights Reserved.
 This software is the confidential and proprietary information of deltadatamandiri.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with deltadatamandiri.com*/
package com.acc_hunter_web.acc_hunter;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.time.LocalDateTime;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.ForeignKey;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;

import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.FetchMode;

/**
 * LelangSk generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`lelang_sk`")
public class LelangSk implements Serializable {

    private Integer id;
    private String area;
    private LocalDateTime startDate;
    private LocalDateTime endDate;
    private String title;
    private MasterArea masterArea;

    @Id
    @SequenceGenerator(name = "generator", sequenceName = "`sk_auctions_ID_seq`" , allocationSize = 1)
    @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "generator")
    @Column(name = "`id`", nullable = false, scale = 0, precision = 10)
    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    @Column(name = "`area`", nullable = false, length = 255)
    public String getArea() {
        return this.area;
    }

    public void setArea(String area) {
        this.area = area;
    }

    @Column(name = "`start_date`", nullable = true)
    public LocalDateTime getStartDate() {
        return this.startDate;
    }

    public void setStartDate(LocalDateTime startDate) {
        this.startDate = startDate;
    }

    @Column(name = "`end_date`", nullable = true)
    public LocalDateTime getEndDate() {
        return this.endDate;
    }

    public void setEndDate(LocalDateTime endDate) {
        this.endDate = endDate;
    }

    @Column(name = "`title`", nullable = true, length = 50)
    public String getTitle() {
        return this.title;
    }

    public void setTitle(String title) {
        this.title = title;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`area`", referencedColumnName = "`area_code`", insertable = false, updatable = false, foreignKey = @ForeignKey(name = "`FK_lelang_sk_to_master_area`"))
    @Fetch(FetchMode.JOIN)
    public MasterArea getMasterArea() {
        return this.masterArea;
    }

    public void setMasterArea(MasterArea masterArea) {
        if(masterArea != null) {
            this.area = masterArea.getAreaCode();
        }

        this.masterArea = masterArea;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof LelangSk)) return false;
        final LelangSk lelangSk = (LelangSk) o;
        return Objects.equals(getId(), lelangSk.getId());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getId());
    }
}